{"version":3,"file":"Signup.808a1fe1.js","sources":["../../src/components/Signup.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from \"../contexts/AuthContext\"\n\n\nexport default function Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError('Passwords do not match')\n        }\n\n        try {\n            setError('')\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch {\n            setError('Failed to create an account')\n        }\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirm</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                        </Form.Group>\n\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link to=\"/login\">Log In</Link>\n            </div>\n\n        </>\n    )\n}"],"names":["useRef","useState"],"mappings":"ybAMiC,MACvB,GAAWA,mBACX,EAAcA,mBACd,EAAqBA,mBACrB,CAAE,UAAW,IACb,CAAC,EAAO,GAAYC,mBAAS,IAC7B,CAAC,EAAS,GAAcA,mBAAS,IACjC,EAAU,eAEY,EAAG,qCACzB,iBAEE,EAAY,QAAQ,QAAU,EAAmB,QAAQ,YAClD,GAAS,6BAGhB,GACS,MACE,SACL,GAAO,EAAS,QAAQ,MAAO,EAAY,QAAQ,SACjD,KAAK,WACf,KACW,iCAEF,6DAKN,EAAD,qBACK,EAAK,KAAN,qBACK,KAAD,CAAI,UAAU,oBAAmB,WAEhC,mBAAU,EAAD,CAAO,QAAQ,UAAU,mBAElC,EAAD,CAAM,SAAU,mBACX,EAAK,MAAN,CAAY,GAAG,yBACV,EAAK,MAAN,KAAY,yBACX,EAAK,QAAN,CAAc,KAAK,QAAQ,IAAK,EAAU,SAAQ,sBAGrD,EAAK,MAAN,CAAY,GAAG,4BACV,EAAK,MAAN,KAAY,4BACX,EAAK,QAAN,CAAc,KAAK,WAAW,IAAK,EAAa,SAAQ,sBAG3D,EAAK,MAAN,CAAY,GAAG,oCACV,EAAK,MAAN,KAAY,oCACX,EAAK,QAAN,CAAc,KAAK,WAAW,IAAK,EAAoB,SAAQ,sBAGlE,EAAD,CAAQ,SAAU,EAAS,UAAU,aAAa,KAAK,UAAS,8BAM3E,MAAD,CAAK,UAAU,0BAAyB,4CACV,EAAD,CAAM,GAAG,UAAS"}