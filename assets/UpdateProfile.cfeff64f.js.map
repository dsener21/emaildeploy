{"version":3,"file":"UpdateProfile.cfeff64f.js","sources":["../../src/components/UpdateProfile.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from \"../contexts/AuthContext\"\n\n\nexport default function UpdateProfile() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser, updateEmail, updatePassword } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError('Passwords do not match')\n        }\n\n        const promises = []\n        setLoading(true)\n        setError('')\n        if (emailRef.current.value !== currentUser.email) {\n            promises.push(updateEmail(emailRef.current.value))\n        }\n        if (passwordRef.current.value !== currentUser.password) {\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(() => {\n            history.push('/')\n        }).catch(() => {\n            setError('Failed to update account')\n        }).finally(() => {\n            setLoading(false)\n        })\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\n\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder='Leave empty for not making a change' />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirm</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder='Leave empty for not making a change' />\n                        </Form.Group>\n\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\n                            Update\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Link to=\"/\">Cancel</Link>\n            </div>\n        </>\n    )\n}"],"names":["useRef","useState"],"mappings":"4OAMwC,MAC9B,GAAWA,mBACX,EAAcA,mBACd,EAAqBA,mBACrB,CAAE,cAAa,cAAa,kBAAmB,IAC/C,CAAC,EAAO,GAAYC,mBAAS,IAC7B,CAAC,EAAS,GAAcA,mBAAS,IACjC,EAAU,eAEM,EAAG,MACnB,iBAEE,EAAY,QAAQ,QAAU,EAAmB,QAAQ,YAClD,GAAS,+BAGd,GAAW,KACN,MACF,IACL,EAAS,QAAQ,QAAU,EAAY,SAC9B,KAAK,EAAY,EAAS,QAAQ,QAE3C,EAAY,QAAQ,QAAU,EAAY,YACjC,KAAK,EAAe,EAAY,QAAQ,gBAG7C,IAAI,GAAU,KAAK,IAAM,GACrB,KAAK,OACd,MAAM,IAAM,GACF,8BACV,QAAQ,IAAM,GACF,6DAMV,EAAD,qBACK,EAAK,KAAN,qBACK,KAAD,CAAI,UAAU,oBAAmB,kBAEhC,mBAAU,EAAD,CAAO,QAAQ,UAAU,mBAElC,EAAD,CAAM,SAAU,mBACX,EAAK,MAAN,CAAY,GAAG,yBACV,EAAK,MAAN,KAAY,yBACX,EAAK,QAAN,CAAc,KAAK,QAAQ,IAAK,EAAU,SAAQ,GAAC,aAAc,EAAY,yBAGhF,EAAK,MAAN,CAAY,GAAG,4BACV,EAAK,MAAN,KAAY,4BACX,EAAK,QAAN,CAAc,KAAK,WAAW,IAAK,EAAa,YAAY,yDAG/D,EAAK,MAAN,CAAY,GAAG,oCACV,EAAK,MAAN,KAAY,oCACX,EAAK,QAAN,CAAc,KAAK,WAAW,IAAK,EAAoB,YAAY,yDAGtE,EAAD,CAAQ,SAAU,EAAS,UAAU,aAAa,KAAK,UAAS,6BAM3E,MAAD,CAAK,UAAU,0CACV,EAAD,CAAM,GAAG,KAAI"}